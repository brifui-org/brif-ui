import fs from "node:fs/promises";
import { type RequiredBrifUIPluginConfig } from "@brifui/theme";

const template = (config: RequiredBrifUIPluginConfig) => `
/**
 * This file is automatically generated by @brifui/cli
 * NOTE: DO NOT MODIFY THIS FILE MANUALLY
 */

import {
  BorderRadiusConfig,
  BreakpointConfig,
  ColorConfig,
  ShadowConfig,
  SpacingConfig
} from "@brifui/theme";

declare global {
  interface BrifUIThemeConfig {
    colors: {
      ref?: Record<string, ColorConfig>;
      sys?: Record<string, ColorConfig>;
    };
    breakpoints: BreakpointConfig;
    spacing: SpacingConfig;
    borderRadius: BorderRadiusConfig;
    shadow: ShadowConfig;
  }

  ${generateBrifThemeKey(config)}
}

export {};
    `;

export const generateBrifThemeKey = (config: RequiredBrifUIPluginConfig) =>
  `type BrifUIThemeKey = ${[...new Set(["dark", "light", ...Object.keys(config.themes ?? {})])].map((theme) => JSON.stringify(theme)).join(" | ")};`;

export const generateThemeTypes = async ({
  config,
  output
}: {
  config: RequiredBrifUIPluginConfig;
  output: string;
}) => {
  await fs.writeFile(output, template(config));
};
